// Every no can be expressed as product of primes.

// Prime Factorization :

		prime_factorization(long x){
			long i;
			long c;
			c = x;
			while ((c % 2) == 0) {
				printf("%ld\n",2);
				c = c / 2;
			}
			i = 3;
			while (i <= (sqrt(c)+1)) {
				if ((c % i) == 0) {
					printf("%ld\n",i);
					c = c / i;
				}
				else
					i = i + 2;
			}
			if (c > 1) printf("%ld\n",c);
		}

// Finding all divisors of number :
	a divisor of no is subset of its prime Factors.
	all possible subsets may create duplicate factors which needs to be counted only once.
	
// No of primes :
	There are roughly x / ln(x)  primes <= x
	i.e. every one out of ln(x) numbers is a prime.